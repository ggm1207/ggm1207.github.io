<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data-Structure on Gunmo&#39;s Blog</title>
    <link>/categories/data-structure/</link>
    <description>Recent content in Data-Structure on Gunmo&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2008–2020, Steve Francia and Gunmo Goo; all rights reserved.</copyright>
    <lastBuildDate>Fri, 27 Nov 2020 20:18:32 +0900</lastBuildDate><atom:link href="/categories/data-structure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>자료구조 - 배열(Array)</title>
      <link>/post/data-structure-002/</link>
      <pubDate>Fri, 27 Nov 2020 20:18:32 +0900</pubDate>
      
      <guid>/post/data-structure-002/</guid>
      <description>오늘 설명할 것은 Python을 사용하다 보면 거의 만나 볼 일 없는 자료구조!! 바로 배열입니다.
 Numpy를 사용해서 배열을 만나는 것은 예외입니다..
 예전에는 파이썬의 리스트는 리스트의 특성을 갖으면서 배열의 특성도 갖지 않을까 생각했던 적이 있다. 그런 생각을 하게 된 계기는 리스트를 배열처럼 사용하면서 들었던 것 같다.
굳이 위처럼 구현하자면 C언어에서 Node 배열을 할당하고 각 요소마다 연결 리스트로 연결해주면 된다. 지금와서 생각해보면 참 바보같은 생각이다. 내가 자료구조를 대충 공부했다는 것을 입증하는 사실이다.</description>
    </item>
    
    <item>
      <title>자료구조 - 순환(Recursion)</title>
      <link>/post/data-structure-001/</link>
      <pubDate>Sun, 22 Nov 2020 07:52:03 +0900</pubDate>
      
      <guid>/post/data-structure-001/</guid>
      <description>Insert Lead paragraph here.
예전에 공부한 것을 다시 복습하는 느낌으로 보고 있는데 순환(Recursion)이 자료구조라는게 좀 놀라웠다.
왜냐하면 배열이나 트리같은 경우에는 직접 메모리에 할당을 하기 때문에 직관적으로 이해가 되는데 순환은 그렇지 않기 때문이다.
생각해보면 프로그램은 알고리즘과 자료구조로 이뤄지는데 fibonacci를 재귀로 푸는 것은 자료구조를 Recursion을 썼다는 것을 의미한다. (그렇겠지?)
 fib(n) = fib(n-1) + fib(n-2)
 그렇다면 순환의 정의는 무엇일까?
  알고리즘이나 함수가 수행 도중에 자기 자신을 다시 호출하여 문제를 해결하는 기법   예전에 교수님한테 들었던 기억으로는 재귀로 짤 수 있는 코드는 반복문을 사용해서도 짤 수 있다고 증명이 됐다고 들었다.</description>
    </item>
    
  </channel>
</rss>
