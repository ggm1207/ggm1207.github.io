<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gunmo&#39;s Blog</title>
    <link>/</link>
    <description>Recent content on Gunmo&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2008–2020, Steve Francia and Gunmo Goo; all rights reserved.</copyright>
    <lastBuildDate>Fri, 27 Nov 2020 20:18:32 +0900</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>자료구조 - 배열(Array)</title>
      <link>/post/data-structure-002/</link>
      <pubDate>Fri, 27 Nov 2020 20:18:32 +0900</pubDate>
      
      <guid>/post/data-structure-002/</guid>
      <description>오늘은 PS(Problem Solving)에 자주 쓰이는 배열에 대해서 알아보겠습니다.
배열이란? 같은 Type의 변수를 연속된 공간에 할당하는 것을 배열이라 합니다.
배열 ADT 객체: &amp;lt;인덱스, 요소&amp;gt; 쌍의 집합 연산:
 create(n): n개의 요소를 가진 배열의 생성 retrive(A, i): 배열 A의 i번째 요소 반환 store(A, i, item): 배열 A의 i번째 위치에 저장  각각의 ADT를 C에서 어떻게 사용하는지 확인해 보겠습니다.
1int arr[100]; // create(100) 2arr[5] = 3; // store(arr, 5, 3) 3int item = arr[5] // retrive(arr, 5) 1차원 배열 1차원 배열은 아래와 같이 선언할 수 있다.</description>
    </item>
    
    <item>
      <title>클린 개발자, Gunmo</title>
      <link>/about/</link>
      <pubDate>Fri, 27 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>Introduce 머신러닝/딥러닝을 주로 공부하는 학생입니다..!
Work Experience 스칼라웍스  [2019.09 ~ 2019.12]  카카오  [2019.12 ~ 2020.02]  Prize  2018 SW 챌린지, 입상 2019 캡스톤 디자인 페스티발, 은상  Activity  [2018.03 ~ 2019.02] 그래픽스 연구실에서 연구원으로 활동 [2018.09 ~ 2018.12] 러닝코어, 공부두레 멘토로써 활동 후 각각 우수그룹, 취우수그룹 수상 [2019.03 ~ 2019.06] 러닝코어, 러닝메이트 멘토로써 활동 후 우수그룹 수상 [2019.03 ~ 2019.06] 취업스터디 팀장으로 활동  Toy Project.</description>
    </item>
    
    <item>
      <title>Linux에서 SSH로 Window Server 이용하기</title>
      <link>/hobby/trading-bot-002/</link>
      <pubDate>Mon, 23 Nov 2020 09:31:02 +0900</pubDate>
      
      <guid>/hobby/trading-bot-002/</guid>
      <description>이전에 올렸던 포스팅에서는 Azure를 사용해서 Window Server를 구성했습니다. 하지만 SSH 접속이 잘 안 되어서 RDP를 사용해서 접속을 했는데.. terminal을 자주 사용하던 저에게는 많이 불편했습니다. ( 이렇게는 코딩을 할 수 없어.. )
그래서 열심히 구글링한 결과 openSSH-Server를 Window Server에 설치하면 Linux에서 Window로 SSH를 사용해서 접근할 수 있다고 합니다. 그냥 설치하기에는 궁금한 게 많으니 RDP와 SSH에 대해서 알아보도록 하겠습니다. SSH는 알고 있었지만 RDP는 처음 들어보네요.
RDP란 원격 데스크톱 프로토콜(Remote Desktop Protocol, 줄여서 RDP)은 마이크로소프트사가 개발한 사유 프로토콜로, 다른 컴퓨터에 그래픽 사용자 인터페이스를 제공하는 프로토콜이다.</description>
    </item>
    
    <item>
      <title>자료구조 - 순환(Recursion)</title>
      <link>/post/data-structure-001/</link>
      <pubDate>Sun, 22 Nov 2020 07:52:03 +0900</pubDate>
      
      <guid>/post/data-structure-001/</guid>
      <description>Insert Lead paragraph here.
예전에 공부한 것을 다시 복습하는 느낌으로 보고 있는데 순환(Recursion)이 자료구조라는게 좀 놀라웠다.
왜냐하면 배열이나 트리같은 경우에는 직접 메모리에 할당을 하기 때문에 직관적으로 이해가 되는데 순환은 그렇지 않기 때문이다.
생각해보면 프로그램은 알고리즘과 자료구조로 이뤄지는데 fibonacci를 재귀로 푸는 것은 자료구조를 Recursion을 썼다는 것을 의미한다. (그렇겠지?)
 fib(n) = fib(n-1) + fib(n-2)
 그렇다면 순환의 정의는 무엇일까?
  알고리즘이나 함수가 수행 도중에 자기 자신을 다시 호출하여 문제를 해결하는 기법   예전에 교수님한테 들었던 기억으로는 재귀로 짤 수 있는 코드는 반복문을 사용해서도 짤 수 있다고 증명이 됐다고 들었다.</description>
    </item>
    
    <item>
      <title>Azure에서 Window Server구성하기</title>
      <link>/hobby/trading-bot-001/</link>
      <pubDate>Sat, 21 Nov 2020 19:07:56 +0900</pubDate>
      
      <guid>/hobby/trading-bot-001/</guid>
      <description>제가 해보고 싶었던 것들 중 하나가 traiding-bot 구현하기입니다. 미리 구현한 전략을 사용하여 스스로 수익을 만들어내는 traiding-bot이라니 멋지지 않습니까? ( 마이너스만 찍힌다면 다른 이야기 )
우선 traiding-Bot을 구현하려면 증권사에서 제공하는 API를 사용해야 합니다. 제공해주는 API로는 키움의 OpenAPI, 대신의 Cybos/Creon Plus API, Ebest의 Xing API가 있습니다. 어느 API를 사용해도 Window서버 사용에 그리고 32bit 환경을 구성해야만 한다고 합니다. ( 공인인증서 문제라고 하네요. )
Ubuntu를 OS로 사용하는 저 같은 경우에는 어쩔 수 없이 Window 서버를 구성해야 합니다.</description>
    </item>
    
    <item>
      <title>첫 게시글입니다</title>
      <link>/post/001-blog-start/</link>
      <pubDate>Fri, 20 Nov 2020 18:33:16 +0900</pubDate>
      
      <guid>/post/001-blog-start/</guid>
      <description>블로그 시작합니다. ㅎㅎ
주요 포스팅은 제가 공부하는 걸 위주로 올릴 예정입니다. 제가 취업하는데 도움이 되는 것들을 올린다고 생각하시면 될 것 같습니다.
 머신러닝 통계 CS 지식들 Linux, Ubuntu  그 다음 Hobbys에 올릴 포스팅은 제가 하고싶었던 것들을 올릴려고 생각중입니다. 예를 들어서 Hugo 블로그 관련 글들은 Hobbys에 올라갈것 같네요.
한국어 자료들 많이 만들테니 좋은 피드백 부탁드립니다!!
  Post Card에서는 왜 띄어쓰기가 안 되는지 모르겠다. ㅠㅜ
Thumbnail photo created by Racool_studio - www.</description>
    </item>
    
    <item>
      <title></title>
      <link>/archives/</link>
      <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/archives/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Sobre</title>
      <link>/about.pt/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/about.pt/</guid>
      <description>Tradução em português. Apenas para demonstração, o resto do artigo não está traduzido.
Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.</description>
    </item>
    
  </channel>
</rss>
