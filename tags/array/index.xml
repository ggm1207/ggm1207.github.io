<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Array on Gunmo&#39;s Blog</title>
    <link>/tags/array/</link>
    <description>Recent content in Array on Gunmo&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2008–2020, Steve Francia and Gunmo Goo; all rights reserved.</copyright>
    <lastBuildDate>Fri, 27 Nov 2020 20:18:32 +0900</lastBuildDate><atom:link href="/tags/array/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>자료구조 - 배열(Array)</title>
      <link>/post/data-structure-002/</link>
      <pubDate>Fri, 27 Nov 2020 20:18:32 +0900</pubDate>
      
      <guid>/post/data-structure-002/</guid>
      <description>오늘은 PS(Problem Solving)에 자주 쓰이는 배열에 대해서 알아보겠습니다.
배열이란? 같은 Type의 변수를 연속된 공간에 할당하는 것을 배열이라 합니다.
배열 ADT 객체: &amp;lt;인덱스, 요소&amp;gt; 쌍의 집합 연산:
 create(n): n개의 요소를 가진 배열의 생성 retrive(A, i): 배열 A의 i번째 요소 반환 store(A, i, item): 배열 A의 i번째 위치에 저장  각각의 ADT를 C에서 어떻게 사용하는지 확인해 보겠습니다.
1int arr[100]; // create(100) 2arr[5] = 3; // store(arr, 5, 3) 3int item = arr[5] // retrive(arr, 5) 1차원 배열 1차원 배열은 아래와 같이 선언할 수 있다.</description>
    </item>
    
  </channel>
</rss>
